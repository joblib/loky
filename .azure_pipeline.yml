jobs:
- job: linting
  displayName: Linting
  pool:
    vmImage: ubuntu-latest
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.12'
    - bash: |
        pip install black==25.1.0
      displayName: Install linters
    - bash: |
        black --check --diff .
      displayName: Run black

- job: 'test_loky'
  strategy:
    matrix:

      windows-py311:
        imageName: windows-latest
        python.version: "3.11"
        tox.env: py311
      windows-py39:
        imageName: windows-latest
        python.version: "3.9"
        tox.env: py39

      macos-py311:
        imageName: "macos-latest"
        python.version: "3.11"
        tox.env: py311
      macos-py39:
        imageName: "macos-latest"
        python.version: "3.9"
        tox.env: py39

      linux-py311:
        imageName: "ubuntu-latest"
        python.version: "3.11"
        tox.env: py311
      linux-py39-joblib-tests:
        imageName: "ubuntu-latest"
        python.version: "3.9"
        tox.env: "py39"
        joblib.tests: "true"
      linux-python-py39-high-memory:
        imageName: "ubuntu-latest"
        python.version: "3.9"
        tox.env: py39
        RUN_MEMORY: "true"
      linux-py39:
        imageName: "ubuntu-latest"
        python.version: "3.9"
        tox.env: py39

  pool:
    vmImage: $(imageName)
  variables:
    JUNITXML: 'test-data.xml'
    PYTEST_ARGS: '-vl --timeout=120 --maxfail=5'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    # azure-pipelines unpredictably switches between Git\bin\bash and
    # Git\usr\bin\bash when running a bash script inside Windows environments.
    # The latter may use wrong bash commands, resulting in errors when codecov
    # tries to upload the coverage results.
    - bash: echo "##vso[task.prependpath]C:/Program Files/Git/bin"
      displayName: 'Override Git bash shell for Windows'
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - script: python -m pip install --upgrade tox
      displayName: 'Install tox'

    - script: |
        bash continuous_integration/runtests.sh
      displayName: 'Test loky'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '$(JUNITXML)'
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()

    - bash: |
        curl -s https://codecov.io/bash | bash
      displayName: 'Upload to codecov'
      condition: and(succeeded(), ne(variables['joblib.tests'], 'true'))
