jobs:
- job: 'test_loky'
  strategy:
    matrix:

      windows-py310:
        imageName: windows-latest
        python.version: "3.10"
        tox.env: py310
      windows-py37:
        imageName: windows-latest
        python.version: "3.8"
        tox.env: py38

      macos-py310:
        imageName: "macos-latest"
        python.version: "3.10"
        tox.env: py310
      macos-py37:
        imageName: "macos-latest"
        python.version: "3.7"
        tox.env: py37

      linux-pypy3:
        imageName: "ubuntu-20.04"
        python.version: "pypy3"
        tox.env: pypy3
        LOKY_MAX_CPU_COUNT: "2"

      linux-py310:
        imageName: "ubuntu-20.04"
        python.version: "3.10"
        tox.env: py310
      linux-py39-joblib-tests:
        imageName: "ubuntu-20.04"
        python.version: "3.9"
        tox.env: "py39"
        joblib.tests: "true"
      linux-python-py39-high-memory:
        imageName: "ubuntu-20.04"
        python.version: "3.9"
        tox.env: py39
        RUN_MEMORY: "true"
      linux-py38:
        imageName: "ubuntu-20.04"
        python.version: "3.8"
        tox.env: py38

  pool:
    vmImage: $(imageName)
  variables:
    JUNITXML: 'test-data.xml'
    PYTEST_ARGS: '-vl --timeout=60 --maxfail=5'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
      condition: ne(variables['python.version'], 'pypy3')
    - bash: |
        wget -q https://downloads.python.org/pypy/pypy3.7-v7.3.7-linux64.tar.bz2 -O pypy.tar.bz2
        mkdir -p pypy3
        (cd pypy3; tar --strip-components=1 -xf ../pypy.tar.bz2)
        mv pypy3 /opt/pypy37
        /opt/pypy37/bin/pypy3 -m ensurepip
        /opt/pypy37/bin/pypy3 -m pip install --upgrade pip wheel
        /opt/pypy37/bin/pypy3 -m venv pypy-venv
        echo "##vso[task.prependpath]pypy-venv/bin"
      displayName: 'Install PyPy 3.7'
      condition: eq(variables['python.version'], 'pypy3')
    # azure-pipelines unpredictably switches between Git\bin\bash and
    # Git\usr\bin\bash when running a bash script inside Windows environments.
    # The latter may use wrong bash commands, resulting in errors when codecov
    # tries to upload the coverage results.
    - bash: echo "##vso[task.prependpath]C:/Program Files/Git/bin"
      displayName: 'Override Git bash shell for Windows'
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - script: python -m pip install --upgrade tox
      displayName: 'Install tox'

    - script: |
        bash continuous_integration/runtests.sh
      displayName: 'Test loky'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '$(JUNITXML)'
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()

    - bash: |
        curl -s https://codecov.io/bash | bash
      displayName: 'Upload to codecov'
      condition: and(succeeded(), ne(variables['joblib.tests'], 'true'))
